name: Deploy to production

on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: [self-hosted, linux, x64]
    environment: production

    steps:
      - name: Checkout code via SSH
        uses: actions/checkout@v3
        with:
          # GitHub 仓库 SSH 地址
          repository: git@github.com:tt472625987/portal-task-web.git
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}
          # 可选，拉取全部 commit 历史
          fetch-depth: 0

      - name: Login to Tencent Container Registry
        uses: docker/login-action@v2
        with:
          registry: ccr.ccs.tencentyun.com
          username: ${{ secrets.TCR_USERNAME }}
          password: ${{ secrets.TCR_PASSWORD }}

      - name: Build and push Docker image
        run: |
          IMAGE_TAG="$(date +%Y%m%d)-$(git rev-parse --short HEAD)"
          IMAGE=ccr.ccs.tencentyun.com/ray321/portal-task-web

          echo "🛠 构建镜像标签: $IMAGE_TAG"

          docker build \
            --build-arg DATABASE_URL=${{ secrets.SUPABASE_POSTGRES_DATABASE_URL }} \
            --build-arg DIRECT_URL=${{ secrets.SUPABASE_POSTGRES_DIRECT_URL }} \
            -t $IMAGE:$IMAGE_TAG .

          docker push $IMAGE:$IMAGE_TAG

          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV

      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: "latest"

      - name: Configure cluster access
        env:
          KUBECONFIG_CONTENT: ${{ secrets.KUBECONFIG }}
        run: |
          mkdir -p $HOME/.kube
          echo "$KUBECONFIG_CONTENT" > $HOME/.kube/config
          export KUBECONFIG=$HOME/.kube/config

          echo "🧪 验证集群连接..."
          kubectl cluster-info || { echo "❌ 集群连接失败"; exit 1; }

      - name: Sync Secrets to Kubernetes
        env:
          DATABASE_URL: ${{ secrets.SUPABASE_POSTGRES_DATABASE_URL }}
          DIRECT_URL: ${{ secrets.SUPABASE_POSTGRES_DIRECT_URL }}
        run: |
          kubectl create secret generic supabase-secret-portal-task-web \
            --namespace default \
            --from-literal=DATABASE_URL="$DATABASE_URL" \
            --from-literal=DIRECT_URL="$DIRECT_URL" \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: Deploy to Kubernetes
        run: |
          echo "::add-mask::$IMAGE"
          echo "🚀 正在部署版本: $IMAGE_TAG"

          sed -i "s|__IMAGE_TAG__|$IMAGE_TAG|g" deployment.yaml
          sed -i "s|__IMAGE_NAME__|$IMAGE|g" deployment.yaml

          kubectl apply -f deployment.yaml
          kubectl rollout restart deployment/portal-task-web-deployment
          kubectl rollout status deployment/portal-task-web-deployment --timeout=180s || {
            echo "❌ 部署失败，查看 Pod 状态："
            kubectl get pods
            echo "❌ 新 Pod 日志如下："
            kubectl logs -l app=portal-task-web --tail=50
            exit 1
          }

          echo "✅ 部署完成"
